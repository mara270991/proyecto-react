{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\coderhouse\\\\src\\\\components\\\\Orden\\\\Orden.js\";\nimport React, { useState, useContext } from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport ButtonCart from '../../components/ButtonCart/ButtonCart.js';\nimport { Formik } from \"formik\"; // Importamos el component <Formik />\n\nimport { CartContext } from '../../components/Context/CartContext.js';\nimport { getFirestore } from '../../firebase';\nimport * as firebase from 'firebase/app';\nimport \"./formulario.css\";\nimport 'firebase/firestore';\n\nfunction Orden(props) {\n  const [cart] = useContext(CartContext);\n  const [inputs, setInputs] = useState({});\n  const [orderId, setOrderID] = useState();\n  const [total, setTotal] = useState({});\n  const price = cart.map(item => item.total);\n  const sum = price.reduce((a, b) => a + b, 0);\n\n  const handleChange = e => {\n    e.persist();\n    setInputs(inputs => ({ ...inputs,\n      [e.target.name]: e.target.value,\n      [e.target.number]: e.target.value,\n      [e.target.email]: e.target.value\n    }));\n  };\n\n  function fire(e) {\n    e.preventDefault();\n    const db = getFirestore();\n    const orders = db.collection(\"orders\");\n    console.log(cart);\n    orders.add({\n      buyer: inputs,\n      items: cart,\n      data: firebase.firestore.Timestamp.fromDate(new Date()),\n      total: cart.reduce((a, c) => a + c.product.precio * c.count, 0)\n    }).then(({\n      id\n    }) => {\n      setOrderID(id); //sucess\n\n      clearState();\n    }).catch(error => {\n      console.log('Error add orders: ', error);\n    }).finally(() => {\n      console.log(orderId);\n    });\n  }\n\n  ;\n\n  function clearState() {\n    setInputs('');\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      bio: \"\"\n    },\n    validate: values => {\n      const errors = {}; // We need a name\n\n      if (!values.name) errors.name = \"Required\"; // We need a valid e-mail\n\n      if (!values.email) errors.email = \"Required\";else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) errors.email = \"Invalid email address\"; // We need a valid password\n\n      if (!values.password) errors.password = \"Required\";else if (`${values.password}`.length < 7) errors.password = \"Password must be larger than 7 characters\";\n      console.log({\n        values,\n        errors\n      });\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 250);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props => {\n    const {\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting\n      /* y otras más */\n\n    } = props;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Form\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Woody Allen\",\n      invalid: errors.name && touched.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, errors.name)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"contoso@domain.com\",\n      invalid: errors.email && touched.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Provide a password\",\n      invalid: errors.password && touched.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"bio\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, isSubmitting ? `Loading` : `Submit`));\n  }))));\n} // if(cart.length === 0){\n//   return <div>\n//   <p className=\"tituloPrincipal\">Carrito</p>\n//   <ButtonCart /></div>\n// } else{\n// return(<div>\n//       <p className=\"tituloOrden mt-3\"> ¡Último paso! </p>\n//\n//         <Form className=\"formulario\" style={{\n//\n//           }}>\n//           <FormGroup row>\n//               <Label for=\"exampleEmail\" sm={12}>Email</Label>\n//               <Col sm={12}>\n//               <Input  onChange={handleChange} type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"nombre@dominio.com\" />\n//\n//               </Col>\n//\n//           </FormGroup>\n//           <FormGroup row>\n//               <Label for=\"exampleEmail\" sm={12}>Confirmar Email</Label>\n//               <Col sm={12}>\n//               <Input onChange={handleChange} type=\"email\" name=\"confirmEmail\" id=\"confirmEmail\" placeholder=\"nombre@dominio.com\" />\n//               </Col>\n//           </FormGroup>\n//           <FormGroup row>\n//               <Label for=\"phone\" sm={12}>Telefono</Label>\n//               <Col sm={12}>\n//               <Input onChange={handleChange} type=\"number\" name=\"number\" id=\"exampleNumber\" placeholder=\"1165579988\" />\n//               </Col>\n//           </FormGroup>\n//           <FormGroup row>\n//               <Label for=\"name\" sm={12}>Nombre y Apellido</Label>\n//               <Col sm={12}>\n//               <Input onChange={handleChange} type=\"name\" name=\"name\" id=\"name\" placeholder=\"\" />\n//               </Col>\n//           </FormGroup>\n//           <FormGroup check row>\n//               <Col >\n//               <Button className=\"btn btn-primary botonOrden mt-3\" onClick={(e)=>fire(e)}>Enviar Orden</Button>\n//               </Col>\n//           </FormGroup>\n//           {orderId ? <div>\n//           <h1 className=\"gracias mt-4\"> ¡Gracias por realizar la compra! </h1>\n//           <p className=\"orden\" >Orden: {orderId}</p>\n//           </div> : ''}\n//           </Form>\n//     </div>)\n// }\n// }\n\n\nexport default Orden;","map":{"version":3,"sources":["C:/xampp/htdocs/React/coderhouse/src/components/Orden/Orden.js"],"names":["React","useState","useContext","Col","Button","Form","FormGroup","Label","Input","ButtonCart","Formik","CartContext","getFirestore","firebase","Orden","props","cart","inputs","setInputs","orderId","setOrderID","total","setTotal","price","map","item","sum","reduce","a","b","handleChange","e","persist","target","name","value","number","email","fire","preventDefault","db","orders","collection","console","log","add","buyer","items","data","firestore","Timestamp","fromDate","Date","c","product","precio","count","then","id","clearState","catch","error","finally","password","bio","values","errors","test","length","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport ButtonCart from  '../../components/ButtonCart/ButtonCart.js';\r\nimport { Formik } from \"formik\"; // Importamos el component <Formik />\r\n\r\nimport { CartContext } from '../../components/Context/CartContext.js';\r\nimport {getFirestore} from '../../firebase';\r\nimport * as firebase from 'firebase/app';\r\nimport \"./formulario.css\"\r\n\r\nimport 'firebase/firestore';\r\nfunction Orden(props) {\r\n  const [cart] = useContext(CartContext);\r\n  const [inputs, setInputs] = useState({});\r\n\r\n\r\n  const [orderId, setOrderID] = useState()\r\n  const [total, setTotal] = useState({});\r\n\r\n  const price = cart.map((item) => item.total);\r\n  const sum = price.reduce((a, b) => a + b,0);\r\n\r\n\r\n  const handleChange = e => {\r\n    e.persist()\r\n          setInputs(inputs => ({ ...inputs, [e.target.name]: e.target.value, [e.target.number]: e.target.value, [e.target.email]: e.target.value}))\r\n  }\r\n\r\n\r\n  function fire(e){\r\n    e.preventDefault();\r\n    const db = getFirestore();\r\n    const orders = db.collection(\"orders\");\r\n\r\n    console.log(cart);\r\n    orders.add(\r\n        {\r\n        buyer: inputs,\r\n        items: cart,\r\n        data: firebase.firestore.Timestamp.fromDate(new Date()),\r\n        total: cart.reduce((a,c) => (a+c.product.precio*c.count), 0),\r\n      }\r\n      ).then(({id})=>{\r\n        setOrderID(id)//sucess\r\n        clearState()\r\n      }).catch((error) =>{\r\n        console.log('Error add orders: ', error);\r\n     }).finally(() =>{\r\n        console.log(orderId);\r\n      });\r\n    };\r\n\r\n\r\n\r\n\r\n  function clearState(){\r\n       setInputs('')\r\n\r\n      }\r\n\r\n      return (\r\n  <Container className=\"p-5\">\r\n    <Card>\r\n      <CardHeader></CardHeader>\r\n      <CardBody>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            bio: \"\",\r\n          }}\r\n          validate={(values) => {\r\n            const errors = {};\r\n\r\n            // We need a name\r\n            if (!values.name) errors.name = \"Required\";\r\n\r\n            // We need a valid e-mail\r\n            if (!values.email) errors.email = \"Required\";\r\n            else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email))\r\n              errors.email = \"Invalid email address\";\r\n\r\n            // We need a valid password\r\n            if (!values.password) errors.password = \"Required\";\r\n            else if (`${values.password}`.length < 7)\r\n              errors.password =\r\n                \"Password must be larger than 7 characters\";\r\n\r\n            console.log({ values, errors });\r\n\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null, 2));\r\n\r\n              setSubmitting(false);\r\n            }, 250);\r\n          }}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              /* y otras más */\r\n            } = props;\r\n            return (\r\n              <Form onSubmit={handleSubmit}>\r\n                <h1>Form</h1>\r\n                <FormGroup>\r\n                  <Label for=\"name\">Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Woody Allen\"\r\n                    invalid={errors.name && touched.name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                  <FormFeedback>{errors.name}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"contoso@domain.com\"\r\n                    invalid={errors.email && touched.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                  />\r\n                  <FormFeedback>{errors.email}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Provide a password\"\r\n                    invalid={errors.password && touched.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                  />\r\n                  <FormFeedback>{errors.password}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"bio\">Text Area</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"bio\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button type=\"submit\" disabled={isSubmitting}>\r\n                  {isSubmitting ? `Loading` : `Submit`}\r\n                </Button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </CardBody>\r\n    </Card>\r\n  </Container>\r\n);\r\n}\r\n    // if(cart.length === 0){\r\n    //   return <div>\r\n    //   <p className=\"tituloPrincipal\">Carrito</p>\r\n    //   <ButtonCart /></div>\r\n    // } else{\r\n    // return(<div>\r\n    //       <p className=\"tituloOrden mt-3\"> ¡Último paso! </p>\r\n    //\r\n    //         <Form className=\"formulario\" style={{\r\n    //\r\n    //           }}>\r\n    //           <FormGroup row>\r\n    //               <Label for=\"exampleEmail\" sm={12}>Email</Label>\r\n    //               <Col sm={12}>\r\n    //               <Input  onChange={handleChange} type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"nombre@dominio.com\" />\r\n    //\r\n    //               </Col>\r\n    //\r\n    //           </FormGroup>\r\n    //           <FormGroup row>\r\n    //               <Label for=\"exampleEmail\" sm={12}>Confirmar Email</Label>\r\n    //               <Col sm={12}>\r\n    //               <Input onChange={handleChange} type=\"email\" name=\"confirmEmail\" id=\"confirmEmail\" placeholder=\"nombre@dominio.com\" />\r\n    //               </Col>\r\n    //           </FormGroup>\r\n    //           <FormGroup row>\r\n    //               <Label for=\"phone\" sm={12}>Telefono</Label>\r\n    //               <Col sm={12}>\r\n    //               <Input onChange={handleChange} type=\"number\" name=\"number\" id=\"exampleNumber\" placeholder=\"1165579988\" />\r\n    //               </Col>\r\n    //           </FormGroup>\r\n    //           <FormGroup row>\r\n    //               <Label for=\"name\" sm={12}>Nombre y Apellido</Label>\r\n    //               <Col sm={12}>\r\n    //               <Input onChange={handleChange} type=\"name\" name=\"name\" id=\"name\" placeholder=\"\" />\r\n    //               </Col>\r\n    //           </FormGroup>\r\n    //           <FormGroup check row>\r\n    //               <Col >\r\n    //               <Button className=\"btn btn-primary botonOrden mt-3\" onClick={(e)=>fire(e)}>Enviar Orden</Button>\r\n    //               </Col>\r\n    //           </FormGroup>\r\n    //           {orderId ? <div>\r\n    //           <h1 className=\"gracias mt-4\"> ¡Gracias por realizar la compra! </h1>\r\n    //           <p className=\"orden\" >Orden: {orderId}</p>\r\n    //           </div> : ''}\r\n    //           </Form>\r\n    //     </div>)\r\n    // }\r\n// }\r\nexport default Orden;\r\n"]},"metadata":{},"sourceType":"module"}