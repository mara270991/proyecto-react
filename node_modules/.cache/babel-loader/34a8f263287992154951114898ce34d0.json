{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\coderhouse\\\\src\\\\components\\\\ItemDetailContainer\\\\ItemDetailContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFirestore } from '../../firebase';\nimport Loader from '../../components/loader/Loader';\nimport ItemDetail from \"../../components/ItemDetail/ItemDetail.js\";\nimport { NavLink } from 'react-router-dom';\nimport './product.css';\n\nconst ItemDetailContainer = () => {\n  const {\n    id\n  } = useParams();\n  const [size, setSize] = useState('');\n  const [product, setProduct] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    const db = getFirestore();\n    const itemCollection = db.collection('items');\n    const item = itemCollection.doc(id);\n    item.get().then(doc => {\n      if (!doc.exists) {\n        console.log(\"Item does not exist!\");\n        return true;\n      }\n\n      const dataQuery = doc.data();\n      console.log(dataQuery);\n      setProduct({\n        id: doc.id,\n        ...doc.data()\n      });\n    }).catch(error => {\n      console.log('Error searching item: ', error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  useEffect(() => {\n    console.log(item);\n  }, [item]);\n\n  if (item === false) {\n    return 'loading';\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ItemDetail, {\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }\n    }));\n  }\n};\n\nexport default ItemDetailContainer;","map":{"version":3,"sources":["C:/xampp/htdocs/React/coderhouse/src/components/ItemDetailContainer/ItemDetailContainer.js"],"names":["React","useEffect","useState","useParams","getFirestore","Loader","ItemDetail","NavLink","ItemDetailContainer","id","size","setSize","product","setProduct","loading","setLoading","db","itemCollection","collection","item","doc","get","then","exists","console","log","dataQuery","data","catch","error","finally"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,2CAAvB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,eAAP;;AAIA,MAAMC,mBAAmB,GAAG,MAAK;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMC,EAAE,GAAGZ,YAAY,EAAvB;AACA,UAAMa,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvB;AACA,UAAMC,IAAI,GAAGF,cAAc,CAACG,GAAf,CAAmBX,EAAnB,CAAb;AAEAU,IAAAA,IAAI,CAACE,GAAL,GACCC,IADD,CACOF,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACG,MAAT,EAAiB;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,eAAO,IAAP;AACD;;AACD,YAAMC,SAAS,GAAGN,GAAG,CAACO,IAAJ,EAAlB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAb,MAAAA,UAAU,CAAC;AAAEJ,QAAAA,EAAE,EAAEW,GAAG,CAACX,EAAV;AAAc,WAAGW,GAAG,CAACO,IAAJ;AAAjB,OAAD,CAAV;AACD,KATD,EAUCC,KAVD,CAUQC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,KAAtC;AACD,KAZD,EAaCC,OAbD,CAaS,MAAM;AACbf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfD;AAgBD,GAtBQ,EAsBN,CAACN,EAAD,CAtBM,CAAT;AA0BAR,EAAAA,SAAS,CAAC,MAAK;AACbuB,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,MAAGA,IAAI,KAAK,KAAZ,EAAkB;AACX,WAAO,SAAP;AACH,GAFJ,MAEQ;AACD,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,UAAD;AAAa,MAAA,KAAK,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAT;AAGH;AAGL,CA9CD;;AA+CA,eAAeX,mBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getFirestore } from '../../firebase';\r\nimport Loader from '../../components/loader/Loader';\r\nimport ItemDetail from \"../../components/ItemDetail/ItemDetail.js\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './product.css';\r\n\r\n\r\n\r\nconst ItemDetailContainer = ()=> {\r\n  const { id } = useParams();\r\n  const [size, setSize] = useState('');\r\n  const [product, setProduct] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const db = getFirestore()\r\n    const itemCollection = db.collection('items');\r\n    const item = itemCollection.doc(id);\r\n\r\n    item.get()\r\n    .then((doc) => {\r\n      if (!doc.exists) {\r\n        console.log(\"Item does not exist!\");\r\n        return true;\r\n      }\r\n      const dataQuery = doc.data();\r\n      console.log(dataQuery);\r\n      setProduct({ id: doc.id, ...doc.data() });\r\n    })\r\n    .catch((error) => {\r\n      console.log('Error searching item: ', error);\r\n    })\r\n    .finally(() => {\r\n      setLoading(false);\r\n    })\r\n  }, [id]);\r\n\r\n\r\n\r\n  useEffect(() =>{\r\n    console.log(item);\r\n  }, [item])\r\n\r\n  if(item === false){\r\n         return 'loading'\r\n     }else{\r\n         return   <div >\r\n             <ItemDetail  value={item}/>\r\n           </div>\r\n     }\r\n\r\n\r\n}\r\nexport default ItemDetailContainer;\r\n"]},"metadata":{},"sourceType":"module"}