{"ast":null,"code":"import React, { useEffect, useState, useContext } from 'react';\nimport { getFirestore } from '../../firebase';\nimport { CartContext } from '../../components/Context/CartContext.js';\n\nconst Orden = () => {\n  const db = getFirestore();\n  const orders = db.coleccion(\"orders\");\n  const [loading, setLoading] = useState(false);\n  const newOrder = {\n    buyer: 'userInfo',\n    items: cart\n  };\n  orders.add(newOrder).then(({\n    id\n  }) => {\n    setOrderId(id);\n  }).catch(err => {\n    setError(err);\n  }).finally(() => {\n    setLoading(false);\n  });\n};\n\nexport default Orden;","map":{"version":3,"sources":["C:/xampp/htdocs/React/coderhouse/src/components/Orden/Orden.js"],"names":["React","useEffect","useState","useContext","getFirestore","CartContext","Orden","db","orders","coleccion","loading","setLoading","newOrder","buyer","items","cart","add","then","id","setOrderId","catch","err","setError","finally"],"mappings":"AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,QAA4B,yCAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,EAAE,GAAGH,YAAY,EAAvB;AACA,QAAMI,MAAM,GAAGD,EAAE,CAACE,SAAH,CAAa,QAAb,CAAf;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAGA,QAAMU,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAE,UADM;AAEbC,IAAAA,KAAK,EAAGC;AAFK,GAAjB;AAKAP,EAAAA,MAAM,CAACQ,GAAP,CAAWJ,QAAX,EAAqBK,IAArB,CAA0B,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAS;AACjCC,IAAAA,UAAU,CAACD,EAAD,CAAV;AACD,GAFD,EAEGE,KAFH,CAESC,GAAG,IAAI;AACdC,IAAAA,QAAQ,CAACD,GAAD,CAAR;AACD,GAJD,EAIGE,OAJH,CAIW,MAAK;AACdZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAND;AAOD,CAlBD;;AAoBA,eAAeL,KAAf","sourcesContent":["\r\nimport React, {useEffect, useState, useContext} from 'react';\r\nimport { getFirestore } from '../../firebase';\r\nimport { CartContext } from '../../components/Context/CartContext.js';\r\n\r\nconst Orden = () => {\r\n  const db = getFirestore();\r\n  const orders = db.coleccion(\"orders\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const newOrder = {\r\n      buyer: 'userInfo',\r\n      items : cart,\r\n  };\r\n\r\n  orders.add(newOrder).then(({id}) =>{\r\n    setOrderId(id);\r\n  }).catch(err => {\r\n    setError(err);\r\n  }).finally(() =>{\r\n    setLoading(false);\r\n  })\r\n}\r\n\r\nexport default Orden;\r\n"]},"metadata":{},"sourceType":"module"}